global:
  ezd-backend:
    deploy: true
  rabbitmqConfig:
    fullnameOverride: "lp-backend-rabbitmq"
#    auth:
#      username: ""
#      password: ""
    customConfig:
      replicas: 1
      persistence:
        storage: "10Gi"
      resources:
        requests:
          cpu: 1000m
          memory: 2Gi
        limits:
          cpu: 2000m
          memory: 2Gi

  postgresqlConfig:
    fullnameOverride: "lp-backend-postgresql"
#    auth:
#      admPassword: ""
#      appPassword: ""
    customConfig:
      instances: 1
      minSyncReplicas: 0
      maxSyncReplicas: 0
      replicationSlots:
        highAvailability:
          enabled: true
      storage:
        size: 2Gi
        resizeInUseVolumes: True
      walStorage:
        size: 2Gi
        resizeInUseVolumes: True
      resources:
        requests:
          memory: "2Gi"
          cpu: "2"
        limits:
          memory: "2Gi"
          cpu: "2"

  redisConfig:
    fullnameOverride: "lp-backend-redis"
#    auth:
#      password: ""
    customConfig:
      kubernetesConfig:
        resources:
          requests:
            cpu: 101m
            memory: 128Mi
          limits:
            cpu: 101m
            memory: 128Mi
      storage:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi


environment: &environment Development

imageCredentials:
  registryDomain: "hub.eadministracja.nask.pl/ezdrp"

storage:
  enabled: true
  storageClass: &storageclass longhorn
  force_chown: false

affinity:
  nodeAffinitySelector:
    name: ""
    value: ""

domainInfo:
  name: project.domain.pl
  cert_name: ezdrp-cert
  cert_info: false

network:
  service:
    type: &servicetype ClusterIP
  ingressName: nginx-ingress  # name from labels : kubernetes.io/metadata.name : xxxx *(ingress classname)

preparing:
  url: "https://publicfilerepo.pentest.ezdrp.gov.pl"
  timeout: 60
  debug:
    enable: "false"
    sleep: 1
    curl1: "false"
    curl2: "false"
    curl3: "false"
    curl4: "false"
  server:
    postgresql:
      path: "sql"
      dir: "Postgres"
    mssql:
      path: "sql"
      dir: "SqlServer"
    mysql:
      path: "sql"
      dir: "MYSQL"
    oracle:
      path: "sql"
      dir: "ORACLE"
    rabbit:
      dir: "rabbit"
      file: "rabbit_config.json"
  basicAuth:
    username: ezdrpuser
    password: Gx4wsNKuK8cJJGGu3wdA4PtqxPgexw

#### Redis DB variables
redisExt:
#  password: 
#  host: 
  port: 6379
  serviceName: mymaster
  isCluster: false

#### rabbit DB variables
rabbitExt:
#  user: 
#  password: 
#  host: 
  port: 5672

#Redis-APPEND SERVER
redisAppendExt:
#  password: 
#  host: 
  port: 6380
  serviceName: mymaster
  isCluster: false

#external idp :
externalIDP:
  LDAP:
    enabled: "false"
    options: "false"
    display_name: "Logowanie LDAP"
  AD:
    enabled: "false"
    options: "false"
    display_name: "Logowanie AD"
  WK:
    enabled: "false"
    options: "false"
    display_name: "Logowanie INT"

#waitfor module :
waitfor:
  image:
    name: wait_for
    version: "01"
    registry: hub.eadministracja.nask.pl/nask

#email credentials :
email:
  active: false
  host: loalhost
  port: 587
  sendermail: test@mail.loc
  sendername: test@mail.loc
  password: qwerty123
  from: "EZD RP"


#logs connections :
seq:
  url: http://seq.seq.svc.cluster.local
loki:
  url: http://loki.loki.svc.cluster.local:3100

ezd:
  use_ocr: true
  use_bpmn: false
  use_dtocache: true
  minimum_log_level: Information
  sso_minimum_log_level: Warning
  logging_serilog_seq_logger: true
  logging_serilog_grafanaloki_logger: true
  logging_serilog_console_logger: true
  

matomo:
  url: ""
  id: ""

#COMMON configurations for everyone using the cloudadmin module
#commonConfigs:

#job parameters
job:
  cronJob:
    registry: hub.eadministracja.nask.pl/nask
    imageName: kubectl_bitnami
    imageTag: latest
  relationalDB:
    oracleconnector:
      registry: hub.eadministracja.nask.pl/nask/connector
      imageName: oracle_conn
      imageTag: latest
    universalconnector:
      registry: hub.eadministracja.nask.pl/nask/connector
      imageName: universal_conn
      imageTag: latest
  rabbit:
    registry: docker.io
    imageName: rabbitmq
    imageTag: 3.8.9-management

#anonimizator :
anonimizator:
  active: true
  image:
    name: anonimizator
    version: "19.7.15"
  moduleName: "anonimizator-api"
  rabbitmq:
    vhostanonimizator: anonimizator
  port: &anonimizatorport 8000
  debug: "False"
  secret_key: paste_here
  brokerdb: anonimizator
  redinessDelay: 5
  livenessDelay: 30
  resources:
    limits:
      cpu: 4000m
      memory: 8192Mi
    requests:
      cpu: 400m
      memory: 2048Mi
  service:
    type: *servicetype

#ezdrp-api :
ezdrpApi:
  active: true
  image:
    name: ezdrp-api
    version: "19.7.15"
  moduleName: &ezdrpapireponame "ezdrp-api"
  rabbitmq:
    vhostarchiwum: arch
    vhostezdrp: ezdrp
  cloudadmin:
    configname: ezdrpapi
  params:
    requestStatistic: "OFF"
    longExecutionStatistic: "OFF"
    Ezdrp_Feature_Ai_Klasyfikacja: Disabled
    Ezdrp_Feature_Ai_Metadane: Disabled
    Ezdrp_Feature_Ai_Streszczenia: Disabled
    Ezdrp_Feature_Bpmn: Disabled
    Ezdrp_Feature_Ewd: Disabled
    Ezdrp_Feature_Muas: Disabled
    Ezdrp_Feature_NoweZadania: Disabled
    Ezdrp_Feature_Ocr: Disabled
    Ezdrp_Feature_PieczecElektroniczna: Disabled
    Ezdrp_Feature_CentrumStatystyk: Disabled
    Ezdrp_Feature_PrzydzielanieDostepow: Enabled
    statistics_config_Instance_InstallationId: ""
    statistics_config_Instance_ApiKey: ""
    statistics_config_Workers_TaskRequest_DefaultInterval: "24:00:00"
    statistics_config_Workers_SendTaskResult_DefaultInterval: "24:00:00"
    testVersionName: "Wersja Testowa"
  port: &ezdrpapiport 5000
  livenessDelay: 40
  startupDelay: 30
  redinessDelay: 10
  resources:
    limits:
      cpu: 6000m
      memory: 4Gi
    requests:
      cpu: 3000m
      memory: 4Gi
  persistence:
    storageClass: *storageclass
    size: 1 # size in Gi (gigabyte)
    accessMode: ReadWriteOnce
  service:
    type: *servicetype

#ezdrp-web :
ezdrpWeb:
  active: true
  image:
    name: ezdrp-web
    version: "19.7.15"
  moduleName: ezdrp-web
  port: &ezdrpwebport 8080
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 128Mi
  service:
    type: *servicetype

#filerepository :
filerepository:
  active: true
  image:
    name: filerepository
    version: "19.7.15"
  moduleName: &filereponame "filerepo-api"
  port: &filerepoport 5000
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 1500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  bufferChunkSize: "1048576"
  maxRequestSize: "2147483647"
  redisTTL: 300
  tokenName: "fr:tokens:"
  persistence:
    storageClass: *storageclass
    size: 20 #size in Gi (gigabyte)
    accessMode: ReadWriteOnce
    mountPoint: "/data"
    filerepoStorageType: "S1"
    s3:
      host: ""
      port: ""
      access_key: ""
      secret_key: ""
      tls: ""
      bucketname: ""
    ezdpuwmigration:
      enabled: false
      dataPath: "/EZD_PUW/data"
      metaPath: "/EZD_PUW/meta"
      storageClass: ""
      size:
      accessMode: ReadWriteOnce
  service:
    type: *servicetype

#kuip-api :
kuipApi:
  active: true
  image:
    name: kuip-api
    version: "19.7.15"
  moduleName: &kuipapiname "kuip-api"
  cloudadmin:
    configname: kuipapi
  port: &kuipapiport 5000
  livenessDelay: 20
  startupDelay: 5
  redinessDelay: 5
  resources:
    limits:
      cpu: 500m
      memory: 2048Mi
    requests:
      cpu: 250m
      memory: 1024Mi
  service:
    type: *servicetype

#kuip-web :
kuipWeb:
  active: true
  image:
    name: kuip-web
    version: "19.7.15"
  moduleName: kuip-web
  port: &kuipwebport 8080
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 128Mi
  appProd: true
  service:
    type: *servicetype

#ocr-api :
ocrApi:
  active: true
  image:
    name: ocr-api
    version: "19.7.15"
  moduleName: &ocrname ocr-api
  cloudadmin:
    configname: ocrapi
  rabbitmq:
    vhost: ezdrp
  port: &ocrport 5000
  redinessDelay: 10
  livenessDelay: 50
  resources:
    limits:
      cpu: 2000m
      memory: 2048Mi
    requests:
      cpu: 1000m
      memory: 1024Mi
  service:
    type: *servicetype

#razor :
razor:
  active: true
  image:
    name: razor
    version: "19.7.15"
  moduleName: &razorname "razor"
  port: &razorport 5000
  redinessDelay: 10
  livenessDelay: 60
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 512Mi
  service:
    type: *servicetype

#sso-apigateway :
ssoApigateway:
  active: true
  adminActive: false #chwilowe - do testow - wywalic takze ingress-admin po przejsciu na prod !
  image:
    name: sso-api-gateway
    version: "19.7.15"
  moduleName: sso-apigateway
  cloudadmin:
    configname: ssoapigateway
  port: &ssoapigw 8000
  portAdmin: 8001
  portCache: 10000
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 3000m
      memory: 6Gi
    requests:
      cpu: 1000m
      memory: 3Gi
  kongAdminListen: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
  kongStatusListen: "0.0.0.0:8100"
  kongTrustedIPS: "0.0.0.0/0,::/0"
  kongHeaders: "off"
  service:
    type: *servicetype

#sso-externalproviders :
ssoExternalProviders:
  active: true
  image:
    name: sso-customexternalprovider
    version: "19.7.15"
  moduleName: sso-customexternalproviders
  cloudadmin:
    configname: ssocep
  port: &ssoextproviderport 5000
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    type: *servicetype

#sso-identityserver :
ssoIdentityServer:
  active: true
  image:
    name: sso-identityserver
    version: "19.7.15"
  moduleName: &ssoidpname sso-identityserver
  cloudadmin:
    configname: sso
  port: &ssoidpport 5000
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  environment: *environment
  forwardHeaders: true
  forceSetHttps: true
  persistence:
    storageClass: *storageclass
    size: 1
    accessMode: ReadWriteOnce
  service:
    type: *servicetype

#wpe-rest:
wpeRest:
  active: true
  image:
    name: wpe-rest
    version: "19.7.15"
  moduleName: &wperestname "wpe-rest"
  port: &wperestport 8080
  redinessDelay: 50
  livenessDelay: 120
  resources:
    limits:
      cpu: 2000m
      memory: 8000Mi
    requests:
      cpu: 200m
      memory: 756Mi
  persistence:
    storageClass: *storageclass
    size: 2 #size in Gi (gigabyte)
    accessMode: ReadWriteOnce
  service:
    type: *servicetype

#wpe-web :
wpeWeb:
  active: false
  image:
    name: wpe-web
    version: "<WPE-WEB-VERSION>"
  moduleName: wpe-web
  port: &wpeport 8080
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 128Mi
  service:
    type: *servicetype

#btm :
btm:
  active: true
  image: 
    name: btm
    version: "19.7.15"
  cloudadmin:
    configname: btm
  moduleName: &btm "btm"
  port: &btmport 5000
  redinessDelay: 5
  livenessDelay: 30
  resources:
    limits:
      cpu: 1000m
      memory: 2048Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  service:
    type: *servicetype

#integrator-api :
integratorApi:
  active: true
  image:
    name: integrator-api
    version: "19.7.15"
  moduleName: &integratorapiname "integrator-api"
  cloudadmin:
    configname: integrator
  port: &integratorapiport 5000
  redinessDelay: 10
  livenessDelay: 50
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1Gi
  service:
    type: *servicetype

#job-trigger :
jobTrigger:
  active: true
  image:
    name: jobtrigger
    version: "19.7.15"
  moduleName: &jobtriggername "job-trigger"
  cloudadmin:
    configname: jobtrigger
  port: &jobtriggerport 5000
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  service:
    type: *servicetype

# variables for cloudadmin :
cloudadmin:
  active: true
  centrum_statystyk_reader_url: "https://reader.stats.ezdrp.gov.pl"
  centrum_statystyk_writer_url: "https://writer.stats.ezdrp.gov.pl"
  image:
    name: cloudadmin
    version: "19.7.15"
  moduleName: cloudadmin
  port: &cloudadminport 2000
  redinessDelay: 20
  livenessDelay: 180
  transactionTimeout: 30
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  relationaldb:
    connectiontype:
      ezdrp: POSTGRESQL
      archiwum: POSTGRESQL
      kuip: POSTGRESQL
      ezdrpodczyt: POSTGRESQL
#    connectionstring:
#      ezdrp: 
#      archiwum: 
#      kuip: 
#      ezdrpodczyt: 
  rabbit:
    confirms: true
  redis:
    serviceName: ""
  redisAppend:
    serviceName: ""
  elastic:
    host: elasticsearch
    port: 8200
  archiwum:
    host: *ezdrpapireponame
    port: *ezdrpapiport
  quickscan:
    url: https://pliki.ezdrp.eadministracja.nask.pl/quickscan/version.xml
  ldapbinddnscheme: ""
  externalprovider1:
    enabled: false
    scheme: "symulator"
    schemeDisplayName: "Logowanie symulator"
    handlerType: "Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler, Microsoft.AspNetCore.Authentication.OpenIdConnect"
    options: false
  tracing:
    strategy: "AlwaysOff"
    endpoint: "http://tempo.loki.svc.cluster.local:4318/v1/traces" 
  seal:
    host: "seal-web"
    port: 5000
  teryt:
    host: "teryt"
    port: 5000
  muas:
    host: "muas-api"
    port: 5000
  forms:
    host: "ezdrp-forms"
  camunda:
    host: "camunda"
  razor:
    host: "razor"
  service:
    type: *servicetype
  
#teryt :
teryt:
  active: true
  image:
    name: teryt
    version: "19.7.15"
  cloudadmin:
    configname: teryt
  moduleName: teryt
  port: &terytport 5000
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 300m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 64Mi
  service:
    type: *servicetype

#forms-web :
formsWeb:
  active: true
  image:
    name: forms-web
    version: "19.7.15"
  moduleName: ezdrp-forms
  port: &formsport 8080
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 128Mi
  service:
    type: *servicetype

#procesowosc :
procesowosc:
  active: false
  #image:
    #name: ezdrp-bpmn-java-validators
    #version: "19.7.15"
  moduleName: bpmn-java-validators
  port: 8080
  redinessDelay: 10
  livenessDelay: 30
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 128Mi
  service:
    type: *servicetype
